#!/usr/bin/env python
PACKAGE = "pandora_alert_handler"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("objectMergeDistance", double_t, 0, "A double parameter", 0.03, 0.001, 0.3)
#~ pose finder
gen.add("occupiedCellThres", double_t, 0, "A double parameter", 0.51, 0, 1)
gen.add("orientationCircle", double_t, 0, "A double parameter", 0.2, 0.10, 0.5)
gen.add("orientationDist", double_t, 0, "A double parameter", 0.5, 0.20, 1)
gen.add("highThres", double_t, 0, "A double parameter", 1.2, 0, 2)
gen.add("lowThres", double_t, 0, "A double parameter", 0.1, 0, 1)

#~ hole
gen.add("holeMinDistance", double_t, 0, "A double parameter", 0.25, 0, 1)
gen.add("holeMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("holeSystemNoiseSD", double_t, 0, "A double parameter", 0.005, 0.0, 0.2)
gen.add("holeMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ qr
gen.add("qrScore", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("qrMinDistance", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("qrMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("qrSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("qrMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ dataMatrix
gen.add("dataMatrixScore", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("dataMatrixMinDistance", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("dataMatrixMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("dataMatrixSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("dataMatrixMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ hazmat
gen.add("hazmatScore", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("hazmatMinDistance", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("hazmatMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("hazmatSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("hazmatMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ thermal
gen.add("thermalScore", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("thermalMinDistance", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("thermalMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("thermalSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("thermalMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ motion
gen.add("motionScore", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("motionMinDistance", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("motionMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("motionSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("motionMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ sound
gen.add("soundScore", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("soundMinDistance", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("soundMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("soundSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("soundMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ co2
gen.add("co2Score", int_t, 0, "An int parameter", 1, 0, 10)
gen.add("co2MinDistance", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("co2MinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("co2SystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("co2MeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ face
gen.add("faceScore", int_t, 0, "An int parameter", 5, 0, 10)
gen.add("faceMinDistance", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("faceMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("faceSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("faceMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ landoltc
gen.add("landoltcScore", int_t, 0, "An int parameter", 0, 0, 10)
gen.add("landoltcMinDistance", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("landoltcMinProbability", double_t, 0, "A double parameter", 0.5, 0, 1)
gen.add("landoltcSystemNoiseSD", double_t, 0, "A double parameter", 0.05, 0, 0.2)
gen.add("landoltcMeasurementSD", double_t, 0, "A double parameter", 0.2, 0.0, 1)

#~ victim
gen.add("clusterRadius", double_t, 0, "A double parameter", 0.2, 0, 1)
gen.add("sameVictimRadius", double_t, 0, "A double parameter", 0.2, 0, 1)

#~ object_handler
gen.add("sensorRange", double_t, 0, "A double parameter", 2.5, 0, 10)

exit(gen.generate(PACKAGE, "pandora_alert_handler", "AlertHandler"))
